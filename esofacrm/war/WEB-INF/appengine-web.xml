<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
	<application>cpapdirect-dev</application>
	<version>27</version>

	<!-- By default, App Engine sends requests serially to a given web server. 
		To allow App Engine to send multiple requests in parallel specify: <threadsafe>true</threadsafe> -->

	<!-- Configure serving/caching of GWT files -->
	<static-files>
		<include path="**" />

		<!-- The following line requires App Engine 1.3.2 SDK -->
		<include path="**.nocache.*" expiration="0s" />

		<include path="**.cache.*" expiration="365d" />
		<exclude path="**.gwt.rpc" />
	</static-files>

	<!-- Configure java.util.logging -->
	<system-properties>
		<property name="java.util.logging.config.file" value="WEB-INF/logging.properties" />
		 <property name="appengine.datastore.disableChunkSizeWarning" value="true"/>
	</system-properties>

	<!-- HTTP Sessions are disabled by default. To enable HTTP sessions specify: 
		<sessions-enabled>true</sessions-enabled> It's possible to reduce request 
		latency by configuring your application to asynchronously write HTTP session 
		data to the datastore: <async-session-persistence enabled="true" /> With 
		this feature enabled, there is a very small chance your app will see stale 
		session data. For details, see http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions -->

	<sessions-enabled>true</sessions-enabled>
	<threadsafe>true</threadsafe>

  <!--Other settings here...-->
  <instance-class>F4</instance-class>
  <automatic-scaling>
    <min-idle-instances>0</min-idle-instances>
    <max-idle-instances>1</max-idle-instances>
    <min-pending-latency>7.5s</min-pending-latency>
  </automatic-scaling>
</appengine-web-app>
